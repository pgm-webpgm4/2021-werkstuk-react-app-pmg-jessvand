{"version":3,"sources":["app/images/eggcellent-logo-txt.svg","app/routes/index.js","app/components/Navbar.js","app/components/ProductCard.js","app/components/UpdateProduct.js","app/pages/AdminPage.js","app/pages/AdminAddPage.js","app/pages/AdminUpdatePage.js","app/pages/AdminDeletePage.js","app/pages/CartPage.js","app/pages/DetailPage.js","app/images/hero.jpg","app/pages/HomePage.js","app/pages/PaymentPage.js","app/pages/ProductsPage.js","app/index.js","app/App.js","reportWebVitals.js","index.js"],"names":["ADMIN","ADMIN_ADD","ADMIN_UPDATE","ADMIN_UPDATE_DETAIL","ADMIN_DELETE","CART","PAYMENT","PRODUCTS","Navbar","className","href","target","rel","to","src","LogoText","alt","Routes","ProductCard","props","id","imgUrl","name","price","UpdateProduct","params","match","productId","JSON","stringify","UPDATE_PRODUCT","gql","useState","setName","description","setDescription","setPrice","setImgUrl","category","setCategory","useMutation","updateProduct","updatedProduct","useEffect","console","log","onSubmit","e","preventDefault","variables","onChange","value","type","placeholder","AdminPage","AdminAddPage","ADD_PRODUCT","addProduct","data","AdminUpdatePage","useQuery","fetchPolicy","loading","error","message","products","map","product","replace","DELETE_PRODUCT","AdminDeletePage","refetch","deleteProduct","onClick","CartPage","cartContent","parse","localStorage","getItem","item","removeItem","DetailPage","PRODUCT","currentCart","newArr","setItem","addToCart","HomePage","Hero","PaymentPage","PRODUCTS_BY_CATEGORY","ProductsPage","useLazyQuery","getCat","productsByCategory","App","client","ApolloClient","uri","cache","InMemoryCache","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20b47e96.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/eggcellent-logo-txt.4990c751.svg\";","export const HOME = '/';\nexport const ADMIN = '/admin';\nexport const ADMIN_ADD = '/admin/add';\nexport const ADMIN_UPDATE = '/admin/update';\nexport const ADMIN_UPDATE_DETAIL = '/admin/update/:id';\nexport const ADMIN_DELETE = '/admin/delete';\nexport const CART = '/cart';\nexport const PAYMENT = '/payment';\nexport const PRODUCT_DETAIL = '/products/:id';\nexport const PRODUCTS = '/products';","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport * as Routes from '../routes';\n\nimport LogoText from '../images/eggcellent-logo-txt.svg';\nimport { FaFacebookSquare, FaShoppingCart } from 'react-icons/fa';\nimport { GrInstagram } from 'react-icons/gr';\n\nconst Navbar = () => {\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"container-fluid\" >\n        <div className=\"row nav-row\" >\n          <div className=\"col-12 col-md-12 col-lg-4 col-xl-4 nav-socials\" >\n            <a href=\"https://www.facebook.com/GraduaatProgrammeren.Arteveldehogeschool\" target=\"_blank\" rel=\"noopener noreferrer\"> <FaFacebookSquare /> </a>\n            <a href=\"https://www.instagram.com/madebygdm/\" target=\"_blank\" rel=\"noopener noreferrer\"> <GrInstagram /> </a>\n          </div>\n          <div className=\"col-12 col-md-12 col-lg-4 col-xl-4 nav-logo\" >\n            <Link to={Routes.HOME}>\n              <img src={LogoText} alt=\"logo\"/>\n            </Link>\n          </div>\n          <div className=\"col-12 col-md-12 col-lg-4 col-xl-4 nav-cart\" >\n            <Link to={Routes.ADMIN}>Admin</Link>\n            <Link to={Routes.PRODUCTS}> Producten </Link>\n            <Link className=\"cart\" to={Routes.CART}> <FaShoppingCart /> </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n}\n\nexport default Navbar;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport * as Routes from '../routes';\n\nconst ProductCard = (props) => {\n\n  return (\n    \n    \n    <Link to={`/products/${props.id}`} className=\"product-card-link\">\n      <div className=\"product-card\">\n        <div className=\"product-card-image\">\n          <img src={props.imgUrl} alt=\"product-img\"/>\n        </div>\n        <div className=\"product-card-info\">\n          <h3>{props.name}</h3>\n          <p>€ {props.price}</p>\n        </div>\n      </div>\n    </Link>\n  );\n\n}\n\nexport default ProductCard;","import React, { useEffect, useState } from 'react';\nimport { gql, useMutation } from '@apollo/client';\n// import { useQuery } from '@apollo/client';\nimport { BsArrowLeft } from 'react-icons/bs';\n\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../routes';\n\nconst UpdateProduct = ({match: {params}}) => {\n\n  const productId = JSON.stringify(params.id);\n\n  // const PRODUCT = gql `\n  //   query product {\n  //     product(id: ${productId}) {\n  //       id\n  //       name\n  //       price\n  //       description\n  //       imgUrl\n  //     }\n  //   }\n  // `;\n\n  const UPDATE_PRODUCT = gql `\n  mutation editProduct ($name: String, $description: String, $price: String, $imgUrl: String, $category: String){\n    editProduct(productId: ${productId},\n      productData: {\n      name: $name,\n      description: $description,\n      price: $price,\n      imgUrl: $imgUrl,\n      category: $category}) {\n      id\n      }\n    }\n  `;\n\n  // const {loading, error, data} = useQuery(PRODUCT);\n\n  // const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [category, setCategory] = useState('');\n  const [updateProduct, updatedProduct] = useMutation(UPDATE_PRODUCT);\n\n  useEffect(() => {\n    if(updatedProduct) {\n      console.log(updatedProduct);\n    }\n  }, [updatedProduct]);\n\n  // if(loading) return 'Loading...'\n  // if(error) return `Error: ${error.message}`;\n\n  return (\n    <div className=\"page page-update\">\n      <div className=\"container\">\n        <Link to={Routes.ADMIN_UPDATE} className=\"button\"> <BsArrowLeft /> </Link>\n        <h1>Update een product</h1>\n\n        <div className=\"add-update-product\">\n          <form\n            onSubmit={e => {\n              e.preventDefault();\n              updateProduct({ variables: { name: name, description: description, price: price, imgUrl: imgUrl, category: category}})\n            }}>\n            <p>{productId}</p>\n            <input onChange={e => setName(e.target.value)} type=\"text\" placeholder=\"Product naam\"></input>\n            <textarea onChange={e => setDescription(e.target.value)}type=\"text\" placeholder=\"Product beschrijving\"/>\n            <input onChange={e => setPrice(e.target.value)}type=\"text\" placeholder=\"Prijs\"/>\n            <input onChange={e => setImgUrl(e.target.value)}type=\"text\" placeholder=\"Afbeelding (url)\" />\n            <input onChange={e => setCategory(e.target.value)}type=\"text\" placeholder=\"Categorie\" />\n            <button className=\"button\" type=\"submit\">Update</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UpdateProduct;","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../routes';\n\nimport { FiFilePlus, FiEdit, FiFileMinus} from 'react-icons/fi';\n\n// import { AdminLogin } from '../components';\n\nconst AdminPage = () => {\n\n  return (\n    <div className=\"page page-admin\">\n      {/* <AdminLogin /> */}\n\n      <div className=\"container\">\n        <h1>Welkom Admin</h1>\n        <div className=\"row actions-container\">\n          <div className=\"col-12 col-md-12 col-lg-4 col-xl-4\">\n            <Link to={Routes.ADMIN_ADD} className=\"action\">\n              <p>Product toevoegen</p>\n              <FiFilePlus className=\"icon\"/>\n            </Link>\n          </div>\n          <div className=\"col-12 col-md-12 col-lg-4 col-xl-4\">\n            <Link to={Routes.ADMIN_UPDATE} className=\"action\">\n              <p>Product updaten</p>\n              <FiEdit className=\"icon\"/>\n            </Link>\n          </div>\n          <div className=\"col-12 col-md-12 col-lg-4 col-xl-4\">\n            <Link to={Routes.ADMIN_DELETE} className=\"action\">\n              <p>Product verwijderen</p>\n              <FiFileMinus className=\"icon\"/>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminPage;","import React, { useEffect, useState } from 'react';\nimport { gql, useMutation } from '@apollo/client';\n\nimport { BsArrowLeft } from 'react-icons/bs';\n\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../routes';\n\nconst AdminAddPage = () => {\n\n  const ADD_PRODUCT = gql `\n    mutation addProduct ($name: String, $description: String, $price: String, $imgUrl: String, $category: String){\n      addProduct(product: {\n        name: $name,\n        description: $description,\n        price: $price,\n        imgUrl: $imgUrl,\n        category: $category}) {\n        id\n      }\n    }\n  `;\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [category, setCategory] = useState('');\n  const [addProduct, { data }] = useMutation(ADD_PRODUCT);\n\n  useEffect(() => {\n    if(data) {\n      console.log(data);\n    }\n  }, [data]);\n\n  return (\n    <div className=\"page page-admin\">\n\n      <div className=\"container\">\n        <Link to={Routes.ADMIN} className=\"button\"> <BsArrowLeft /> </Link>\n        <h1>Voeg een product toe</h1>\n\n        <div className=\"add-update-product\">\n          <form\n            onSubmit={e => {\n              e.preventDefault();\n              addProduct({ variables: {name: name, description: description, price: price, imgUrl: imgUrl, category: category} });\n            }}>\n            <input onChange={e => setName(e.target.value)} type=\"text\" placeholder=\"Product naam\" ></input>\n            <textarea onChange={e => setDescription(e.target.value)} type=\"text\" placeholder=\"Product beschrijving\" />\n            <input onChange={e => setPrice(e.target.value)} type=\"text\" placeholder=\"Prijs\" />\n            <input onChange={e => setImgUrl(e.target.value)} type=\"text\" placeholder=\"Afbeelding (url)\" />\n            <input onChange={e => setCategory(e.target.value)}type=\"text\" placeholder=\"Categorie\" />\n            <button className=\"button\" type=\"submit\">Voeg product toe</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminAddPage;","import React, { useEffect } from 'react';\nimport { useQuery , gql } from '@apollo/client';\nimport { BsArrowLeft } from 'react-icons/bs';\n\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../routes';\n\nconst PRODUCTS = gql `\n{\n  products {\n    id\n    name\n  }\n}\n`;\n\nconst AdminUpdatePage = () => {\n\n  const {loading, error, data} = useQuery(PRODUCTS, {\n    fetchPolicy: \"cache-first\",\n  });\n\n  useEffect(() => {\n    if(data) {\n      console.log(data);\n    }\n  }, [data]);\n\n  if(loading) return 'Loading products...';\n  if(error) return `Error: ${error.message}`;\n\n  return (\n    <div className=\"page page-admin\">\n      <div className=\"container\">\n        <Link to={Routes.ADMIN} className=\"button\"> <BsArrowLeft /> </Link>\n        <h1>Kies een product om te updaten</h1>\n\n        <div className=\"products-container\">\n          {data.products ?\n          data.products.map((product) => {\n            return (\n              <Link to={Routes.ADMIN_UPDATE_DETAIL.replace(':id', product.id)} key={product.id}>\n                <div className=\"product\">\n                  <p>{product.id}</p>\n                  <p>{product.name}</p>\n                </div>\n              </Link>\n            )\n          })\n          :\n          <p>Loading...</p>\n          }\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default AdminUpdatePage;","import React, { useState, useEffect } from 'react';\nimport { useQuery, gql, useMutation } from '@apollo/client';\n\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { BiRefresh } from 'react-icons/bi';\n\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../routes';\n\nconst PRODUCTS = gql `\n  {\n    products {\n      id\n      name\n    }\n  }\n`;\n\nconst DELETE_PRODUCT = gql `\n  mutation deleteProduct ($id: ID) {\n    deleteProduct(productId: $id) {\n      id\n    }\n  }\n`;\n\nconst AdminDeletePage = () => {\n\n  const {loading, error, data, refetch} = useQuery(PRODUCTS, {\n    fetchPolicy: \"cache-first\",\n  });\n\n  const [deleteProduct, params] = useMutation(DELETE_PRODUCT);\n\n  useEffect(() => {\n    if(params.data) {\n      refetch();\n    }\n  }, [params])\n\n  if(loading) return 'Loading products...';\n  if(error) return `Error: ${error.message}`;\n\n  return (\n    <div className=\"page page-admin\">\n\n      <div className=\"container\">\n        <Link to={Routes.ADMIN} className=\"button\"> <BsArrowLeft /> </Link>\n        <h1>Verwijder producten</h1>\n        <p>Refresh voor laatste update</p>\n\n        <div className=\"products-container\">\n          {data.products ?\n          data.products.map((product) => {\n            return (\n              <div className=\"product\" key={product.id}>\n                <p>{product.id}</p>\n                <p>{product.name}</p>\n                <button onClick={e => {\n                  e.preventDefault();\n                  deleteProduct({ variables: {id: product.id}});\n                }}>x</button>\n              </div>\n            )\n          })\n          :\n          <p>Loading...</p>\n          }\n        </div>\n        <button onClick={() => refetch()} className=\"button refresh\"><BiRefresh /></button>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminDeletePage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../routes';\n\nimport { ProductCard } from '../components';\n\nconst CartPage = () => {\n\n  const cartContent = JSON.parse(localStorage.getItem('cart'));\n\n  function clearStorage () {\n    localStorage.removeItem('cart');\n  }\n\n  return (\n    <div className=\"page page-cart\">\n      <div className=\"container\">\n        <h2>Winkelmandje</h2>\n        <div className=\"row\">\n          <div className=\"col-12 col-md-12 col-lg-9 col-xl-9\">\n            <div className=\"row\">\n              {cartContent ? \n                cartContent.map(item => {\n                  return (\n                  <div className=\"col-12 col-md-12 col-lg-4 col-xl-4\" key={item.id}>\n                    <ProductCard name={item.name} price={item.price} imgUrl={item.imgUrl}/>\n                  </div>\n                )})\n                :\n                <p> </p>\n              }\n            </div>\n          </div>\n          <div className=\"col-12 col-md-12 col-lg-3 col-xl-3 price-list\">\n            { cartContent ?\n                cartContent.map(item => {\n                  return (\n                  <div className=\"cart-item\" key={item.id}>\n                    <p>{item.name}</p>\n                    <p>€ {item.price}</p>\n                  </div>\n                  )\n                })\n              :\n                <p><strong>Nog geen artikelen in jouw winkelmandje </strong></p>\n            }\n            <Link to={Routes.PRODUCTS}>Verder winkelen</Link>\n            <Link onClick={() => clearStorage()} to={Routes.PAYMENT}>Afrekenen</Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartPage;","import React from 'react';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\n\nimport * as Routes from '../routes';\n\nimport { useQuery, gql } from '@apollo/client';\n\nconst DetailPage = ({match: {params}}) => {\n\n  const productId = JSON.stringify(params.id);\n\n  const PRODUCT = gql `\n    query product {\n      product(id: ${productId}) {\n        id\n        name\n        price\n        description\n        imgUrl\n      }\n    }\n  `;\n\n  \n\n  function addToCart(product) {\n    const currentCart = JSON.parse(localStorage.getItem('cart'));\n\n    const newArr = [...currentCart, product];\n\n    localStorage.setItem('cart', JSON.stringify(newArr));\n    \n  }\n\n\n  const {loading, error, data} = useQuery(PRODUCT);\n\n  if(loading) return 'Loading...'\n  if(error) return `Error: ${error.message}`;\n\n\n  return (\n    <div className=\"page page-detail\">\n      <div className=\"container\">\n        <div className=\"row\">\n\n          <div className=\"col-12 col-md-12 col-lg-6 col-xl-6 detail-image\">\n            <img src={data.product.imgUrl} alt=\"product-img\"/>\n          </div>\n\n          <div className=\"container col-12 col-md-12 col-lg-6 col-xl-6 detail-info\">\n            <h1>{data.product.name}</h1>\n            <p>{data.product.description}</p>\n            <p className=\"price\">$ {data.product.price}</p>\n            <button onClick={() => addToCart(data.product)} className=\"button\">In winkelmandje</button>\n          </div>\n\n          <Link to={Routes.PRODUCTS} className=\"button back-button\"> <BsArrowLeft /> </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DetailPage;","export default __webpack_public_path__ + \"static/media/hero.b0bd3f3a.jpg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport * as Routes from '../routes';\n\nimport Hero from '../images/hero.jpg';\n\nconst HomePage = () => {\n\n  return (\n    <div className=\"page page-home\">\n      <div className=\"hero-container\">\n        <img src={Hero} alt=\"hero-img\"/>\n      </div>\n      <div className=\"content-container\">\n        <Link to={Routes.PRODUCTS} className=\"button-opacity\">\n          shop now\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../routes';\nimport { BsCheckCircle } from 'react-icons/bs';\n\nconst PaymentPage = () => {\n\n  return (\n    <div className=\"page page-payment\">\n      <div className=\"container payment-container\">\n        <h1>Bedankt voor uw aankoop!</h1>\n        <p><BsCheckCircle /></p>\n        <Link to={Routes.HOME} className=\"button\">Home</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default PaymentPage;","import React, { useEffect } from 'react';\n\nimport { useQuery, gql, useLazyQuery } from '@apollo/client';\n\n// import { ProductCard } from '../components';\nimport { GiEgyptianBird, GiTurtle, GiUnicorn } from 'react-icons/gi';\nimport { FaFrog } from 'react-icons/fa';\nimport { ProductCard } from '../components';\n\nconst PRODUCTS = gql `\n  {\n    products {\n      id\n      name\n      price\n      category\n      imgUrl\n    }\n  }\n`;\n\nconst PRODUCTS_BY_CATEGORY = gql `\n  query productsByCategory($category: String){\n    productsByCategory(category: $category) {\n      id\n      name\n      price\n      category\n      imgUrl\n    }\n  }\n`;\n\nconst ProductsPage = () => {\n  const {loading, error, data} = useQuery(PRODUCTS, {\n    fetchPolicy: \"cache-first\",\n  });\n\n  const [getCat, params] = useLazyQuery(PRODUCTS_BY_CATEGORY);\n\n  useEffect(() => {\n    if(params.data) {\n      console.log(params.data.productsByCategory)\n    }\n  }, [params])\n  \n  if(loading) return 'Loading products...';\n  if(error) return `Error: ${error.message}`;\n\n\n  return (\n    <div className=\"page page-products\">\n      <div className=\"container\">\n\n        <div className=\"filter-container\">\n          <ul className=\"filter-list\">\n            <li> <button onClick={() => getCat({variables: {category:\"amfibie\"}})} > <FaFrog className=\"filter-icon\" /> Ambifien</button> </li>\n            <li> <button onClick={() => getCat({variables: {category:\"mystic\"}})}> <GiUnicorn className=\"filter-icon\" /> Mytische Wezens</button> </li>\n            <li> <button onClick={() => getCat({variables: {category:\"reptielen\"}})}> <GiTurtle className=\"filter-icon\" /> Reptielen</button> </li>\n            <li> <button onClick={() => getCat({variables: {category:\"vogels\"}})}> <GiEgyptianBird className=\"filter-icon\" /> Vogels</button> </li>\n          </ul>\n        </div>\n\n        <div className=\"container productlist-container\">\n          <div className=\"row\">\n            {params.data ?\n              params.data.productsByCategory.map(product => (\n                <div className=\"col-12 col-md-12 col-lg-4 col-xl-4\" key={product.id}>\n                  <ProductCard id={product.id} imgUrl={product.imgUrl} name={product.name} price={product.price}/>\n                </div>\n              ))\n              :\n              data.products.map(product => (\n                <div className=\"col-12 col-md-12 col-lg-4 col-xl-4\" key={product.id}>\n                  <ProductCard id={product.id} imgUrl={product.imgUrl} name={product.name} price={product.price}/>\n                </div>\n              ))\n              }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProductsPage;","import App from './App';\n\nexport default App;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Navbar } from './components';\nimport { AdminPage, AdminAddPage, AdminUpdatePage, AdminDeletePage, CartPage, DetailPage, HomePage, PaymentPage, ProductsPage } from './pages';\nimport { UpdateProduct } from './components';\nimport * as Routes from './routes';\n\nimport { ApolloProvider, ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst App = () => {\n\n  const client = new ApolloClient({\n    uri: 'http://localhost:5050',\n    cache: new InMemoryCache()\n  });\n\n  localStorage.setItem('cart', '[]');\n\n  return (\n    <div className=\"App\">\n      <ApolloProvider client={client}>\n        <Router>\n          <Navbar />\n          <Switch>\n            <Route exact path={Routes.HOME} component={HomePage} />\n            <Route exact path={Routes.ADMIN} component={AdminPage} />\n            <Route exact path={Routes.ADMIN_ADD} component={AdminAddPage} />\n            <Route exact path={Routes.ADMIN_UPDATE} component={AdminUpdatePage} />\n            <Route exact path={Routes.ADMIN_UPDATE_DETAIL} component={UpdateProduct} />\n            <Route exact path={Routes.ADMIN_DELETE} component={AdminDeletePage} />\n            <Route exact path={Routes.CART} component={CartPage} />\n            <Route exact path={Routes.PAYMENT} component={PaymentPage} />\n            <Route exact path={Routes.PRODUCT_DETAIL} component={DetailPage} />\n            <Route exact path={Routes.PRODUCTS} component={ProductsPage} />\n          </Switch>\n        </Router>\n      </ApolloProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './app/scss/main.scss'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}